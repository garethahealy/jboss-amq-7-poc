# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version ">= 1.8.0"

# Install required Vagrant plugins
missing_plugins_installed = false
required_plugins = %w(vagrant-vbguest vagrant-hostmanager vagrant-cachier vagrant-triggers vagrant-auto_network)

required_plugins.each do |plugin|
  if !Vagrant.has_plugin? plugin
    system "vagrant plugin install #{plugin}"
    missing_plugins_installed = true
  end
end

# If any plugins were missing and have been installed, re-run vagrant
if missing_plugins_installed
  exec "vagrant #{ARGV.join(" ")}"
end

AutoNetwork.default_pool = '10.22.1.11/24'

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "garethahealy/centos72_java8"
  config.vm.box_version = "= 1.0.1"

  # Config /etc/hosts via plugin
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  config.vm.provider "virtualbox" do |vb|
    # Customize the amount of memory on the VM:
    vb.memory = 512
    vb.cpus = 1
  end

  # Config Interconnect Dispatch VM
  config.vm.define :interconnectdispatchusa do |interconnectdispatchusa|
    # Assign network config
    interconnectdispatchusa.vm.hostname = "interconnect-dispatch-usa.amq7.vagrant.local"
    interconnectdispatchusa.vm.network "private_network", ip: "10.22.1.11"

    # Add qdrouterd
    interconnectdispatchusa.vm.provision "file", source: "usa/qdrouterd.conf", destination: "/tmp/qdrouterd.conf"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    interconnectdispatchusa.vm.provision :shell, path: "bootstrap-dispatch.sh", privileged: false

    # Complete message
    interconnectdispatchusa.vm.post_up_message = "http://interconnect-dispatch-usa.amq7.vagrant.local"
  end

  config.vm.define :interconnectdispatcheu do |interconnectdispatcheu|
    # Assign network config
    interconnectdispatcheu.vm.hostname = "interconnect-dispatch-eu.amq7.vagrant.local"
    interconnectdispatcheu.vm.network "private_network", ip: "10.22.2.11"

    # Add qdrouterd
    interconnectdispatcheu.vm.provision "file", source: "eu/qdrouterd.conf", destination: "/tmp/qdrouterd.conf"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    interconnectdispatcheu.vm.provision :shell, path: "bootstrap-dispatch.sh", privileged: false

    # Complete message
    interconnectdispatcheu.vm.post_up_message = "http://interconnect-dispatch-eu.amq7.vagrant.local"
  end

  config.vm.define :interconnectdispatchice do |interconnectdispatchice|
    # Assign network config
    interconnectdispatchice.vm.hostname = "interconnect-dispatch-ice.amq7.vagrant.local"
    interconnectdispatchice.vm.network "private_network", ip: "10.22.3.11"

    # Add qdrouterd
    interconnectdispatchice.vm.provision "file", source: "iceland/qdrouterd.conf", destination: "/tmp/qdrouterd.conf"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    interconnectdispatchice.vm.provision :shell, path: "bootstrap-dispatch.sh", privileged: false

    # Complete message
    interconnectdispatchice.vm.post_up_message = "http://interconnect-dispatch-ice.amq7.vagrant.local"
  end

  config.vm.define :interconnectdispatchjap do |interconnectdispatchjap|
    # Assign network config
    interconnectdispatchjap.vm.hostname = "interconnect-dispatch-jap.amq7.vagrant.local"
    interconnectdispatchjap.vm.network "private_network", ip: "10.22.4.11"

    # Add qdrouterd
    interconnectdispatchjap.vm.provision "file", source: "japan/qdrouterd.conf", destination: "/tmp/qdrouterd.conf"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    interconnectdispatchjap.vm.provision :shell, path: "bootstrap-dispatch.sh", privileged: false

    # Complete message
    interconnectdispatchjap.vm.post_up_message = "http://interconnect-dispatch-jap.amq7.vagrant.local"
  end

end
