# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version ">= 1.8.0"

# Install required Vagrant plugins
missing_plugins_installed = false
required_plugins = %w(vagrant-vbguest vagrant-hostmanager vagrant-cachier vagrant-triggers vagrant-auto_network)

required_plugins.each do |plugin|
  if !Vagrant.has_plugin? plugin
    system "vagrant plugin install #{plugin}"
    missing_plugins_installed = true
  end
end

# If any plugins were missing and have been installed, re-run vagrant
if missing_plugins_installed
  exec "vagrant #{ARGV.join(" ")}"
end

AutoNetwork.default_pool = '10.21.1.11/24'

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "garethahealy/centos72_java8"
  config.vm.box_version = "= 1.0.1"

  # Config /etc/hosts via plugin
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true

  # Config USA Master Broker VM
  config.vm.define :brokerusamaster do |brokerusamaster|
    # Assign network config
    brokerusamaster.vm.hostname = "broker-usa-master.amq7.vagrant.local"
    brokerusamaster.vm.network "private_network", ip: "10.21.1.10"

    # Add the zip
    brokerusamaster.vm.provision "file", source: "~/.m2/repository/org/jboss/amq/amq/7.0.0.Alpha/amq-7.0.0.Alpha-bin.zip", destination: "/opt/rh/amq-7.0.0.Alpha-bin.zip"
    brokerusamaster.vm.provision "file", source: "usa/usa-master-broker.xml", destination: "/opt/rh/usa-master-broker.xml"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    brokerusamaster.vm.provision :shell, path: "bootstrap.sh", privileged: false
    brokerusamaster.vm.provision :shell, path: "usa/bootstrap-broker-usa-master.sh", privileged: false

    # Complete message
    brokerusamaster.vm.post_up_message = "http://broker-usa-master.amq7.vagrant.local:8161/hawtio - U: admin / P: admin"
  end

  # Config USA Slave Broker VM
  config.vm.define :brokerusaslave do |brokerusaslave|
    # Assign network config
    brokerusaslave.vm.hostname = "broker-usa-slave.amq7.vagrant.local"
    brokerusaslave.vm.network "private_network", ip: "10.21.1.11"

    # Add the zip
    brokerusaslave.vm.provision "file", source: "~/.m2/repository/org/jboss/amq/amq/7.0.0.Alpha/amq-7.0.0.Alpha-bin.zip", destination: "/opt/rh/amq-7.0.0.Alpha-bin.zip"
    brokerusaslave.vm.provision "file", source: "usa/usa-slave-broker.xml", destination: "/opt/rh/usa-slave-broker.xml"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    brokerusaslave.vm.provision :shell, path: "bootstrap.sh", privileged: false
    brokerusaslave.vm.provision :shell, path: "usa/bootstrap-broker-usa-slave.sh", privileged: false

    # Complete message
    brokerusaslave.vm.post_up_message = "http://broker-usa-slave.amq7.vagrant.local:8161/hawtio - U: admin / P: admin"
  end

  # Config Europe Master Broker VM
  config.vm.define :brokereumaster do |brokereumaster|
    # Assign network config
    brokereumaster.vm.hostname = "broker-eu-master.amq7.vagrant.local"
    brokereumaster.vm.network "private_network", ip: "10.21.2.10"

    # Add the zip
    brokereumaster.vm.provision "file", source: "~/.m2/repository/org/jboss/amq/amq/7.0.0.Alpha/amq-7.0.0.Alpha-bin.zip", destination: "/opt/rh/amq-7.0.0.Alpha-bin.zip"
    brokereumaster.vm.provision "file", source: "eu/eu-master-broker.xml", destination: "/opt/rh/eu-master-broker.xml"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    brokereumaster.vm.provision :shell, path: "bootstrap.sh", privileged: false
    brokereumaster.vm.provision :shell, path: "eu/bootstrap-broker-eu-master.sh", privileged: false

    # Complete message
    brokereumaster.vm.post_up_message = "http://broker-eu-master.amq7.vagrant.local:8161/hawtio - U: admin / P: admin"
  end

  # Config Europe Slave Broker VM
  config.vm.define :brokereuslave do |brokereuslave|
    # Assign network config
    brokereuslave.vm.hostname = "broker-eu-slave.amq7.vagrant.local"
    brokereuslave.vm.network "private_network", ip: "10.21.2.11"

    # Add the zip
    brokereuslave.vm.provision "file", source: "~/.m2/repository/org/jboss/amq/amq/7.0.0.Alpha/amq-7.0.0.Alpha-bin.zip", destination: "/opt/rh/amq-7.0.0.Alpha-bin.zip"
    brokereuslave.vm.provision "file", source: "eu/eu-slave-broker.xml", destination: "/opt/rh/eu-slave-broker.xml"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    brokereuslave.vm.provision :shell, path: "bootstrap.sh", privileged: false
    brokereuslave.vm.provision :shell, path: "eu/bootstrap-broker-eu-slave.sh", privileged: false

    # Complete message
    brokereuslave.vm.post_up_message = "http://broker-eu-slave.amq7.vagrant.local:8161/hawtio - U: admin / P: admin"
  end
end
